openapi: 3.0.0
info:
  title: "note app backend API"
  version: "1.0.0"
  contact:
    name: note app backend API
    email: note-app-backend-api@example.com
    url: https://note-app-backend-api.com/
servers:
  - url: http://localhost:3000
    description: local server
  - url: http://preview-note-app-backend-api:3000
    description: Development server
  - url: https://note-app-backend-api.com/
    description: Production server
tags:
  - name: note
    description: Operations about notes
  - name: user
    description: Operations about users
paths:
  /notes:
    get:
      operationId: getNotes
      summary: Get all notes
      tags: ["note"]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notes"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorBadRequest"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorNotfound"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorForbidden"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInternalServerError"
        "default":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonError"
    post:
      operationId: createNote
      summary: Create a note
      tags: ["note"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Note"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Note"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorBadRequest"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorForbidden"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInternalServerError"
        "default":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonError"
  /note/{noteId}:
    get:
      operationId: getNote
      summary: Get a note
      tags: ["note"]
      parameters:
        - name: noteId
          in: path
          required: true
          schema:
            type: string
          description: Note ID
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Note"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorBadRequest"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorNotfound"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorForbidden"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInternalServerError"
        "default":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonError"
    put:
      operationId: updateNote
      summary: Update a note
      tags: ["note"]
      parameters:
        - name: noteId
          in: path
          required: true
          schema:
            type: string
          description: Note ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Note"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateNote"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorBadRequest"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorForbidden"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInternalServerError"
        "default":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonError"
    delete:
      operationId: deleteNote
      summary: Delete a note
      tags: ["note"]
      parameters:
        - name: noteId
          in: path
          required: true
          schema:
            type: string
          description: Note ID
      responses:
        "204":
          description: Note Deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteNote"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorBadRequest"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorForbidden"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInternalServerError"
        "default":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonError"
  /users:
    get:
      operationId: getUsers
      summary: Get all users
      tags: ["user"]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorBadRequest"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorNotfound"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorForbidden"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInternalServerError"
        "default":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonError"
    post:
      operationId: createUser
      summary: Create a user
      tags: ["user"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorBadRequest"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorForbidden"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInternalServerError"
        "default":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonError"
  /user/{userId}:
    get:
      operationId: getUser
      summary: Get a user
      tags: ["user"]
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: User ID
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorBadRequest"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorNotfound"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorForbidden"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInternalServerError"
        "default":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonError"
    put:
      operationId: updateUser
      summary: Update a user
      tags: ["user"]
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: User ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUser"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorBadRequest"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorForbidden"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInternalServerError"
        "default":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonError"
    delete:
      operationId: deleteUser
      summary: Delete a user
      tags: ["user"]
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: User ID
      responses:
        "204":
          description: No Content
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteUser"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorBadRequest"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorForbidden"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInternalServerError"
        "default":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonError"
components:
  schemas:
    Note:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        content:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Notes:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        count:
          type: integer
          format: int32
        nextPagetoken:
          type: string
          format: string
        notes:
          type: array
          items:
            $ref: "#/components/schemas/Note"
    UpdateNote:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    DeleteNote:
      type: object
      properties:
        deletednoteid:
          type: string
          format: uuid
        message:
          type: string
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Users:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        count:
          type: integer
          format: int32
        nextPagetoken:
          type: string
          format: string
        users:
          type: array
          items:
            $ref: "#/components/schemas/User"
    UpdateUser:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    DeleteUser:
      type: object
      properties:
        deleteduserid:
          type: string
          format: uuid
        message:
          type: string
    ErrorNotfound:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    ErrorBadRequest:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    ErrorUnauthorized:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    ErrorForbidden:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    ErrorInternalServerError:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    CommonError:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
